<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0" xml:id="framework">
    <title>LinkRest Framework</title>
    
    <section xml:id="framework-include">
        <title>Prerequisites</title>
        <para>
            <itemizedlist>
                <listitem>
                    <para>Java 1.7 or newer</para>
                </listitem>
                <listitem>
                    <para>A Java "war" project that will serve your REST requests.</para>
                </listitem>
                <listitem>
                    <para>A JAX-RS 2.0 container, such as Jersey 2.x.</para>
                </listitem>
                <listitem>
                    <para>Cayenne 4.0.M2 or newer. Mapping your database and starting Cayenne
                        ServerRuntime is outside the scope of this document. Please refer to the
                            <link
                            xlink:href="http://cayenne.apache.org/docs/4.0/cayenne-guide/index.html"
                            >corresponding Cayenne docs</link>.</para>
                </listitem>
            </itemizedlist>
        </para>
    </section>
 
    <section xml:id="framework-include">
        <title>Getting Started</title>
        <para>To load LinkRest in your project, follow these simple steps:</para>
        <para>1. Declare LinkRest dependency. Here is a Maven example. If you are using Gradle or
            Ant, you do what needs to be done there to include LinkRest
            dependency.<programlisting language="xml">&lt;dependency>
   &lt;groupId>com.nhl.link.rest&lt;/groupId>
   &lt;artifactId>link-rest&lt;/artifactId>
   &lt;version>1.18&lt;/version>
&lt;/dependency> </programlisting>2.
            Create <code>LinkRestRuntime</code>, and load it in JAX-RS container. Assuming the
            container is Jersey, this may look like
            this:<programlisting language="java">import javax.ws.rs.ApplicationPath;
import org.glassfish.jersey.server.ResourceConfig;
import com.nhl.link.rest.runtime.LinkRestBuilder;

/**
 * A Jersey-specific JAX-RS Application class that loads LinkRest.
 */
@ApplicationPath("/")
public class JaxRsApplication extends ResourceConfig {

	public JaxRsApplication() {

		ServerRuntime cayenneRuntime = ..
        LinkRestRuntime lrRuntime = LinkRestBuilder.build(cayenneRuntime);
        super.register(lrRuntime);

        // continue with Application setup...
        ..
	}
}
</programlisting>
            Now you are ready to use LinkRest.</para>
    </section>
    
    <section xml:id="framework-programming-endpoints">
        <title>Writing Resource Endpoints</title>
    </section>
    
    <section xml:id="framework-security">
        <title>Implementing Security Policies</title>
    </section>
    
    <section xml:id="framework-customize-stack">
        <title>Customizing Request Processing</title>
    </section>
</chapter>
